USE motelapp;

DROP PROCEDURE IF EXISTS ReservasAnuladas;
DROP PROCEDURE IF EXISTS EstadisticaMensualMoteles;



-- PROCEDIMIENTO ALMACENADO 1 RETORNA HISTORICO DE RESERVAS ANULADAS
DELIMITER //
CREATE PROCEDURE ReservasAnuladas()
BEGIN
    SELECT
        ESTADORESERVA.DESCRIPCION,
        RESERVA.ID_RESERVA,
        RESERVA.VALORRESERVA,
        RESERVA.FECHA,
        CLIENTE.NOMBRE AS NOMBRE_CLIENTE,
        HABITACION.NOMBRE AS NOMBRE_HABITACION,
        MOTEL.NOMBRE AS NOMBRE_MOTEL
    FROM
        RESERVA
    INNER JOIN ESTADORESERVA ON RESERVA.ID_ESTADORESERVA = ESTADORESERVA.ID_ESTADORESERVA
    INNER JOIN CLIENTE ON RESERVA.ID_CLIENTE = CLIENTE.ID_CLIENTE
    INNER JOIN HABITACION ON RESERVA.ID_HABITACION = HABITACION.ID_HABITACION
    INNER JOIN MOTEL ON HABITACION.ID_MOTEL = MOTEL.ID_MOTEL
    WHERE
        RESERVA.ID_ESTADORESERVA = 2;
END
//DELIMITER ;





-- PROCEDIMIENTO ALMACENADO 2 RETORNA EL NUMERO TOTAL DE RESERVAS EFECTIVAS Y EL MONTO RECAUDADO POR CADA MOTEL AL MES
DELIMITER //
CREATE PROCEDURE EstadisticaMensualMoteles()
BEGIN
    SELECT
    motel.ID_MOTEL,
    motel.NOMBRE,
    COUNT(reserva.ID_RESERVA) AS CANTIDAD_RESERVAS,
    SUM(reserva.VALORRESERVA) AS TOTAL_VALOR_RESERVAS,
    estadoreserva.DESCRIPCION
FROM
    reserva
    INNER JOIN habitacion ON reserva.ID_HABITACION = habitacion.ID_HABITACION
    INNER JOIN motel ON habitacion.ID_MOTEL = motel.ID_MOTEL
    INNER JOIN estadoreserva ON reserva.ID_ESTADORESERVA = estadoreserva.ID_ESTADORESERVA
WHERE
    estadoreserva.ID_ESTADORESERVA = 1
    AND MONTH(reserva.FECHA) = 1
GROUP BY
    motel.ID_MOTEL,
    motel.NOMBRE;
END
// DELIMITER ;


