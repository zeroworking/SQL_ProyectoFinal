USE motelapp;

DROP PROCEDURE IF EXISTS ReservasAnuladas;
DROP PROCEDURE IF EXISTS EstadisticaMensualMoteles;

-- PROCEDIMIENTO ALMACENADO 1 RETORNA HISTORICO DE RESERVAS ANULADAS
DELIMITER //
CREATE PROCEDURE ReservasAnuladas()
BEGIN
    SELECT
        ESTADORESERVA.DESCRIPCION,
        RESERVA.ID_RESERVA,
        RESERVA.VALORRESERVA,
        RESERVA.FECHA,
        CLIENTE.NOMBRE AS NOMBRE_CLIENTE,
        HABITACION.NOMBRE AS NOMBRE_HABITACION,
        MOTEL.NOMBRE AS NOMBRE_MOTEL
    FROM
        RESERVA
    INNER JOIN ESTADORESERVA ON RESERVA.ID_ESTADORESERVA = ESTADORESERVA.ID_ESTADORESERVA
    INNER JOIN CLIENTE ON RESERVA.ID_CLIENTE = CLIENTE.ID_CLIENTE
    INNER JOIN HABITACION ON RESERVA.ID_HABITACION = HABITACION.ID_HABITACION
    INNER JOIN MOTEL ON HABITACION.ID_MOTEL = MOTEL.ID_MOTEL
    WHERE
        RESERVA.ID_ESTADORESERVA = 2;
END //
DELIMITER ;

-- PROCEDIMIENTO ALMACENADO 2 RETORNA EL NUMERO TOTAL DE RESERVAS EFECTIVAS Y EL MONTO RECAUDADO POR CADA MOTEL AL MES
DELIMITER //
CREATE PROCEDURE EstadisticaMensualMoteles()
BEGIN
    SELECT
    MOTEL.ID_MOTEL,
    MOTEL.NOMBRE,
    COUNT(RESERVA.ID_RESERVA) AS CANTIDAD_RESERVAS,
    SUM(RESERVA.VALORRESERVA) AS TOTAL_VALOR_RESERVAS,
    ESTADORESERVA.DESCRIPCION
FROM
    RESERVA
    INNER JOIN HABITACION ON RESERVA.ID_HABITACION = HABITACION.ID_HABITACION
    INNER JOIN MOTEL ON HABITACION.ID_MOTEL = MOTEL.ID_MOTEL
    INNER JOIN ESTADORESERVA ON RESERVA.ID_ESTADORESERVA = ESTADORESERVA.ID_ESTADORESERVA
WHERE
    ESTADORESERVA.ID_ESTADORESERVA = 1
    AND MONTH(RESERVA.FECHA) = 1
GROUP BY
    MOTEL.ID_MOTEL,
    MOTEL.NOMBRE;
END //
DELIMITER ;